<?php

/**
 * @file
 * Contains tidy_feedback.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\File\FileSystemInterface;

/**
 * Implements hook_help().
 */
function tidy_feedback_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.tidy_feedback':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('The Tidy Feedback module provides an interactive way for testers to submit feedback about specific elements on your website.') . '</p>';
      return $output;
  }
  return NULL;
}

/**
 * Implements hook_page_attachments().
 */
function tidy_feedback_page_attachments(array &$attachments) {
  $current_user = \Drupal::currentUser();

  // Only add for users with permission.
  if ($current_user->hasPermission('access tidy feedback')) {
    $attachments['#attached']['library'][] = 'tidy_feedback/tidy_feedback';

    // Add the CSRF token to JS settings
    $attachments['#attached']['drupalSettings']['token'] = \Drupal::csrfToken()->get();

    // Debug message to console
    $attachments['#attached']['drupalSettings']['tidyFeedback']['debug'] = 'Banner should be visible';
  }
}

/**
 * Implements hook_form_alter().
 */
function tidy_feedback_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if ($form_id === 'tidy_feedback_form') {
    $form['#attached']['library'][] = 'tidy_feedback/tidy_feedback_form';
    
    // Ensure form supports file uploads
    if (!isset($form['#attributes']['enctype'])) {
      $form['#attributes']['enctype'] = 'multipart/form-data';
    }
  }
}

/**
 * Implements hook_cron().
 */
function tidy_feedback_cron() {
  // Clean up old temporary files that weren't properly saved
  $directory = 'public://tidy_feedback/attachments';
  $file_system = \Drupal::service('file_system');
  
  // Only proceed if directory exists
  if ($file_system->prepareDirectory($directory, FileSystemInterface::CREATE_DIRECTORY)) {
    // Get files older than 1 day (86400 seconds)
    $files = file_scan_directory($directory, '/.*/', ['nomask' => '/(\.\.?|CVS)$/']);
    $yesterday = time() - 86400;
    
    foreach ($files as $file) {
      // Check if file is temporary (has "temp_" prefix) and is old
      if (strpos(basename($file->filename), 'temp_') === 0 && filemtime($file->uri) < $yesterday) {
        $file_system->delete($file->uri);
        \Drupal::logger('tidy_feedback')->notice('Removed old temporary file: @file', ['@file' => $file->filename]);
      }
    }
  }
}
